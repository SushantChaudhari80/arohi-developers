name: Deploy Spring Boot WAR App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # ✅ Step 1: Copy project files to server
    - name: Copy project files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 2244
        source: "."
        target: "/opt/apps/springboot-app"

    # ✅ Step 2: SSH into server, build and deploy WAR Docker container
    - name: Deploy via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 2244
        script: |
          echo "Starting deployment..."

          cd /opt/apps/springboot-app

          echo "Building WAR using Maven..."
          ./mvnw clean package -DskipTests

          echo "Logging in to Docker Hub to avoid rate limit..."
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

          echo "Building Docker image..."
          docker build -t springboot-war-app .

          echo "Stopping and removing existing container if running..."
          docker stop springboot-war || true
          docker rm springboot-war || true

          echo "Running new container..."
          docker run -d --name springboot-war -p 8080:8080 springboot-war-app
